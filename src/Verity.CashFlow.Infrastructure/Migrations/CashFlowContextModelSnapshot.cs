// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Verity.CashFlow.Infrastructure.Persistence;

#nullable disable

namespace Verity.CashFlow.Infrastructure.Migrations
{
    [DbContext(typeof(CashFlowContext))]
    partial class CashFlowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Verity.CashFlow.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<long>("AmountInCents")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("DateOfTransaction")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3dee5685-34a5-4c23-8a67-ba0aff22dcf3"),
                            AmountInCents = 1500L,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateOfTransaction = new DateOnly(2023, 9, 9),
                            Description = "2 milks",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("e354c9b9-8746-40f8-b527-c75b75e062da"),
                            AmountInCents = 5000L,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateOfTransaction = new DateOnly(2023, 9, 9),
                            Description = "10 rice",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("7413e79e-db3a-4e6c-93ee-ed4d62c490b3"),
                            AmountInCents = 3000L,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateOfTransaction = new DateOnly(2023, 9, 9),
                            Description = "20 salt",
                            Status = 0,
                            Type = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
